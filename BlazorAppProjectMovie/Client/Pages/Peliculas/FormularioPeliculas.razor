@using BlazorAppProjectMovie.Shared.Entidades
<h3>FormularioPeliculas</h3>

<EditForm Model="pelicula" OnInvalidSubmit="OnDataAnnonationsValidated">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>@label</label>
        <div>
            <InputText class="form-control" @bind-Value="@pelicula.Titulo"></InputText>
            <ValidationMessage For="@(() => pelicula.Titulo)" />
        </div>
    </div>

    <div class="form-group">
        <label>@label</label>
        <div>
            <InputCheckbox @bind-Value="@pelicula.EnCartelera"></InputCheckbox>
            <ValidationMessage For="@(() => pelicula.EnCartelera)" />
        </div>
    </div>


    <div class="form-group">
        <label>@label</label>
        <div>
            <InputText class="form-control" @bind-Value="@pelicula.Trailer"></InputText>
            <ValidationMessage For="@(() => pelicula.Trailer)" />
        </div>
    </div>

    <div class="form-group">
        <label>@label</label>
        <div>
            <InputDate class="form-control" @bind-Value="@pelicula.Fecha_de_lazanmiento"></InputDate>
            <ValidationMessage For="@(() => pelicula.Fecha_de_lazanmiento)" />
        </div>

        <div class="form-group form-markdown">
            <InputMarkdown @bind-Value="@pelicula.Resumen"
                           For="@(() => pelicula.Resumen)"
                           Label="Resumen" />
        </div>

        <div class="form-group">
            <InputImg label="Foto" ImagenSeleccionada="ImagenSeleccionada" imagenTemporal=""> </InputImg>
        </div>


    </div>

    <div>
        <label>Selector multiple genero: </label>
        <SelectorMultiple Selects="Seleted" NoSelect="NoSeleted"></SelectorMultiple>
    </div>

    <div class="form-group">
        <label>Actores: </label>
        <div>

            <SelectorMultipleTypeahead Context="Personas"
                                       SearchMethod="BuscarActores"
                                       ElementosSeleccionados="ActoresSeleccionados">

                <MyListTemplate>
                    @Personas.Nombre / <input type="text" placeholder="Personaje" @bind="Personas.Personaje" />
                </MyListTemplate>
                <MyResultTemplate>
                    <img style="width: 50px" src="@Personas.Foto" />
                    @Personas.Nombre
                </MyResultTemplate>

            </SelectorMultipleTypeahead>

        </div>
    </div>

    <button type="submit" class="btn btn-success">Save changes</button>

</EditForm>


@code {
    [Parameter] public Pelicula pelicula { get; set; }
    [Parameter] public EventCallback OnValidSubmit { get; set; }
    [Parameter] public string label { get; set; }

    [Parameter] public List<Genero> GenerosSeleccionados { get; set; } = new List<Genero>();
    [Parameter] public List<Genero> GenerosNoSeleccionados { get; set; } = new List<Genero>();
    [Parameter] public List<Personas> ActoresSeleccionados { get; set; } = new List<Personas>();



    private List<SelectMultipleModel> Seleted { get; set; } = new List<SelectMultipleModel>();
    private List<SelectMultipleModel> NoSeleted { get; set; } = new List<SelectMultipleModel>();
    private string posterTemporal;

    protected override void OnInitialized()
    {
        Seleted = GenerosSeleccionados.Select(x => new SelectMultipleModel(x.Id.ToString(), x.Name)).ToList();
        NoSeleted = GenerosNoSeleccionados.Select(x => new SelectMultipleModel(x.Id.ToString(), x.Name)).ToList();

        if (!string.IsNullOrWhiteSpace(pelicula.Poster))
        {
            posterTemporal = pelicula.Poster;
            pelicula.Poster = null;
        }

    }

    private void ImagenSeleccionada(string imagenBase64)
    {
        pelicula.Poster = imagenBase64;
    }

    private async Task<IEnumerable<Personas>> BuscarActores(string searchText)
    {
        return new List<Personas>()
        {
            new Personas(){ Id=1, Nombre = "Sasuke Uchija", Foto = "https://naruto-wiki.com/wp-content/uploads/2021/09/Sasuke-Uchiha-4.png"}
        };
    }

    private async Task OnDataAnnonationsValidated()
    {
        pelicula.GeneroPelicula = Seleted
            .Select(x => new GeneroPelicula { GeneroId = int.Parse(x.llave) }).ToList();

        pelicula.PeliculaActors = ActoresSeleccionados
            .Select(x => new PeliculaActor { PersonaId = x.Id, Personaje = x.Personaje }).ToList();

        if (!string.IsNullOrWhiteSpace(pelicula.Poster)) { posterTemporal = null; }

        await OnValidSubmit.InvokeAsync(null);
    }


}
