@page "/peliculas/crear"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject IMostrarMensaje mostrarMensaje


<h3>CrearPelicula</h3>



@if (MostrarFormulario )
{
    <FormularioPeliculas pelicula="pelicula" OnValidSubmit="Save" label="Titulos"
                     GenerosNoSeleccionados="GenerosNoSeleccionados">
    </FormularioPeliculas>
}
else
{
    <text>Loading...</text>
}



@code {

    

    private bool MostrarFormulario { get; set; } = false;
    private Pelicula pelicula = new Pelicula();
    private List<Genero> GenerosNoSeleccionados = new List<Genero>();



    protected async override Task OnInitializedAsync()
    {
        var responseHttp = await repositorio.Get<List<Genero>>("api/generos");
        GenerosNoSeleccionados = responseHttp.Response;
        MostrarFormulario = true;


        //GenerosNoSeleccionados = new List<Genero>()
        //{
        //    new Genero(){Id = 1, Name = "Accion"},
        //    new Genero(){Id = 2, Name = "Terror"},
        //    new Genero(){Id = 3, Name = "Comic"},
        //    new Genero(){Id = 4, Name = "Ficcion"},
        //    new Genero(){Id = 5, Name = "Drama"},
        //};
    }

    async Task Save()
    {
        var httpResponsa = await repositorio.Post<Pelicula, int>("api/Movies", pelicula);
        //Console.WriteLine(navigationManager.BaseUri);
        //navigationManager.NavigateTo("pelicula");

        if (httpResponsa.Error)
        {
            var mensajeError = await httpResponsa.GetBody();
            await mostrarMensaje.MostrarMensajeError(mensajeError);
        }
        else
        {
            var PeliculaId = httpResponsa.Response;
            navigationManager.NavigateTo($"/pelicula/{PeliculaId}/{pelicula.Titulo.Replace(" ", "-")}");
        }
    }
}
