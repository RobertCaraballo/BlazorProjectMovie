@using System.IO
@using Tewr.Blazor.FileReader
@inject IFileReaderService fileReaderService

<h3>input Img</h3>

<div>
    <label>@label</label>
    <div>
        <input type="file" @ref="inputElement" @onchange="ImageFileSelected" accept = ".jpg,.jpeg,.png"/>
    </div>
</div>
<div>

    @if (imagenBase64 != null)
   {
       <div>
           <div style = "margin : 10px">
               <img src = "data:image/jpeg;base64, @imagenBase64" style = "width : 400px;" />
           </div>
       </div>
   }

   @if (imagenTemporal != null)
  {
      <div>
          <div  style="margin:10px;">
              <img src = "@imagenTemporal" style = "width: 400px;" />
          </div>
      </div>
  }


</div>

@code {
    [Parameter] public string label { get; set; } = "Image";
    [Parameter] public string imagenTemporal { get; set; }
    private string imagenBase64;
    [Parameter] public EventCallback<string> ImagenSeleccionada { get; set; }
    ElementReference inputElement;

    async Task ImageFileSelected()
    {
        foreach (var file in await fileReaderService.CreateReference(inputElement).EnumerateFilesAsync())
        {
            using (MemoryStream memoryStream = await file.CreateMemoryStreamAsync(4 * 102))
            {
                var bytesImagen = new byte[memoryStream.Length];
                memoryStream.Read(bytesImagen, 0, (int)memoryStream.Length);
                imagenBase64 = Convert.ToBase64String(bytesImagen);
                await ImagenSeleccionada.InvokeAsync(imagenBase64);
                imagenTemporal = null;
                StateHasChanged();
            }
        }
    }

}
